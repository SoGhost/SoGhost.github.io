<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on PY-&gt; Blog</title>
    <link>/categories/c/</link>
    <description>Recent content in C# on PY-&gt; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>us-en</language>
    <lastBuildDate>Fri, 27 Jul 2018 08:18:12 +0800</lastBuildDate>
    
	<atom:link href="/categories/c/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C# _语言基础</title>
      <link>/post/c-sharp-notes-02/</link>
      <pubDate>Fri, 27 Jul 2018 08:18:12 +0800</pubDate>
      
      <guid>/post/c-sharp-notes-02/</guid>
      <description>值类型  包括自定义struct类型，enum枚举类型。值类型存储在内存的栈上面，在堆上面存储具体值。
值类型继承于System.ValueType，所有的类继承于System.Object。(Object是所有类型的基类)
/// 注释——为解释方法，类，空间&amp;hellip;进行说明
  struct——类型   用于打包封装小的数据集，可以(像class)建方法、事件&amp;hellip;。
  enum——类型   用于限定变量可能性。
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  #namespace test { class Program { //角标从0开始，Mon=1，使强制从一开始  //enum Days : byte :short 转换类型  enum Days { Mon, Tues, Wenes, Thurs, Fri, Satur, Sun}//整数型  struct Perosn { public int age; private string name; internal string fname;//命名空间内可以访问  protected string lastName;//protected 只有继承于它，才能访问  } static void Main(string[] args) { Person perosn = new Perosn(); person.</description>
    </item>
    
    <item>
      <title>C# _基本操作</title>
      <link>/post/c-sharp-notes-01/</link>
      <pubDate>Tue, 24 Jul 2018 07:43:47 +0800</pubDate>
      
      <guid>/post/c-sharp-notes-01/</guid>
      <description>1.定义变量 必须声明 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  //&amp;amp;&amp;amp;逻辑和||逻辑或 class Program { static void (string[] args) { int a=3; int b=0; if(a==3) { b=4; } else if(a==4) { b=5; } Console.ReadKey();//获取按键 暂停  } }   2.if() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  //随机抽卡 Random random = new Random(); int r = random.</description>
    </item>
    
  </channel>
</rss>