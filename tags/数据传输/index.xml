<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据传输 on PY-&gt;Blog</title>
    <link>https://sofuck.top/tags/%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93/</link>
    <description>Recent content in 数据传输 on PY-&gt;Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Aug 2018 07:42:20 +0800</lastBuildDate>
    
	<atom:link href="https://sofuck.top/tags/%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JSON格式</title>
      <link>https://sofuck.top/posts/json/</link>
      <pubDate>Mon, 06 Aug 2018 07:42:20 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/json/</guid>
      <description>JSON简介  JSON：是一种轻量级的数据交换格式。基于JavaScript的一个子集。JSON采用完全独立于语言的文本格式。Unity主要使用JSON进行服务器端和客户端数据传输。
 JSON结构  通过对象、数组两种结构，就可以组成复杂的数据结构。
  JSON对象   对象：表示为 ‘ {} ’ 括起来的内容，数据结果为键值对的结构。
{ &amp;ldquo;name&amp;rdquo; : &amp;ldquo;Test Name&amp;rdquo; }
属性可以为 数字、字符串、数组、对象。
  JSON数组   数组：中括号 &amp;lsquo; [ ] &amp;lsquo; 括起来的内容，数据结构为 [ &amp;ldquo;C#&amp;rdquo;, &amp;ldquo;Unity&amp;rdquo;, &amp;hellip;] ，取值方式和所有语言一样，使用索引获取，字段值的类型可以是 数字、字符串、数组、对象。
  JSON示例  1 2 3 4 5 6 7 8 9  //Json对象 { &amp;#34;name&amp;#34;:&amp;#34;Ted&amp;#34;, &amp;#34;Lv&amp;#34;:1, &amp;#34;Job&amp;#34;:&amp;#34;法师&amp;#34;, &amp;#34;Exp&amp;#34;:1.1 } //复杂Json对象 { &amp;#34;name&amp;#34;:&amp;#34;Jack&amp;#34;, &amp;#34;info&amp;#34;:{ &amp;#34;Lv&amp;#34;:2, &amp;#34;Job&amp;#34;:&amp;#34;战士&amp;#34;, &amp;#34;Exp&amp;#34;:2.</description>
    </item>
    
  </channel>
</rss>