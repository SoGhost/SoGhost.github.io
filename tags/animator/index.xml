<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Animator on PY-&gt; Blog</title>
    <link>/tags/animator/</link>
    <description>Recent content in Animator on PY-&gt; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>us-en</language>
    <lastBuildDate>Thu, 09 Aug 2018 14:57:50 +0800</lastBuildDate>
    
	<atom:link href="/tags/animator/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Unity 动画系统（4）</title>
      <link>/post/unity-animation-system-04/</link>
      <pubDate>Thu, 09 Aug 2018 14:57:50 +0800</pubDate>
      
      <guid>/post/unity-animation-system-04/</guid>
      <description> Animation Controller </description>
    </item>
    
    <item>
      <title>Unity 动画系统（3）</title>
      <link>/post/unity-animation-system-03/</link>
      <pubDate>Thu, 09 Aug 2018 12:47:45 +0800</pubDate>
      
      <guid>/post/unity-animation-system-03/</guid>
      <description>Animation View  Animation View可以修改的类型：Float, Color, Vector2, Vector3, Vector4, Quaternion, Boolean.
 Add Key:添加特征点 Add Event:添加事件系统    Add Property：增加动画变换属性   可以给给所有物体添加动画。（制作摄像机抖动）
  Root Motion   选中后该物体会相对于（目标）物体坐标移动，否则相对于世界坐标移动。    Animation Event &amp;gt;方便实现角色着陆音效与运动镜头抖动。
 可执行函数 &amp;gt;1. 必须为Public &amp;gt; &amp;gt;2. 函数返回为Void &amp;gt; &amp;gt;3. 只有一个参数 &amp;gt; &amp;gt;4. 输入参数类型包括：int, float, string, Object &amp;gt; &amp;gt; ```c# &amp;gt; public class testAnimationEvent : MonoBehaviour{
public void testPrintLog(float msg){ Debug.Log(&amp;ldquo;Animation Event: &amp;ldquo; + msg.</description>
    </item>
    
    <item>
      <title>Unity 动画系统（2）</title>
      <link>/post/unity-animation-system-02/</link>
      <pubDate>Wed, 08 Aug 2018 20:19:02 +0800</pubDate>
      
      <guid>/post/unity-animation-system-02/</guid>
      <description> 模型创建  Modelling 建模 &amp;gt;Unity以米为单位（一单位长度）。
 Rigging 绑定骨骼 &amp;gt;最少有15个关节，遵循拓扑结构
 Skinning 蒙皮
  模型导入  通用文件导入（.fbx，.obj，.3DS，.dfx，.dea）   .fbx：存储骨骼和动画
通用文件比较节省资源
  原始模型导入（.MAX，.MB，.Blend，.MA）   不过需要预装对应软件
方便，但浪费较大空间
 模型配置    Model rig Animations     Scale Factor(比例系数) Animation Type(骨骼状态)    Mesh Compression(网格压缩)     Generate Lightmap(生成光照贴图)      创建动画 </description>
    </item>
    
    <item>
      <title>Unity 动画系统（1）</title>
      <link>/post/unity-animation-system-01/</link>
      <pubDate>Mon, 06 Aug 2018 11:45:28 +0800</pubDate>
      
      <guid>/post/unity-animation-system-01/</guid>
      <description>Mecanim——核心功能  内置动画状态机系统(Animator)      Controller 角色控制器     Avatar (骨骼替身) 替身骨骼   Apply Root Motion ( 应用根运动 )    Update Mode ( 刷新模式 )    Culling Mode (选择模式)       人物动画的重定向   更换的Avatar即可重复使用动画。
1.在Model 选取界面，选择 RIG&amp;ndash;&amp;gt;Animation Type-&amp;gt;Humanoid(人形的)-&amp;gt;Apply
2.然后可以配置人物骨骼Avatar。
  动画的分解与混合   Blend Tree：混合树
通过Blend Tree混合多个动画。
通过添加其他动画同时播放多个动画。
  关节动画的 IK 逆向定位   IK用于实现角色始终看着一个物体、一个关节与物体绑定。</description>
    </item>
    
  </channel>
</rss>