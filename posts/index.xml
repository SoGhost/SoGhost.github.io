<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on PY-&gt;Blog</title>
    <link>https://sofuck.top/posts/</link>
    <description>Recent content in Posts on PY-&gt;Blog</description>
    <meta name="generator" content="Hugo 0.49.2" />
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Dec 2018 11:01:51 +0800</lastBuildDate>
    
        <atom:link href="https://sofuck.top/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C#正则表达式</title>
      <link>https://sofuck.top/posts/csharp-regular_expression/</link>
      <pubDate>Sat, 15 Dec 2018 11:01:51 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/csharp-regular_expression/</guid>
      <description>C#正则表达式介绍与使用</description>
    </item>
    
    <item>
      <title>Beginner</title>
      <link>https://sofuck.top/posts/android/beginner-android/</link>
      <pubDate>Fri, 26 Oct 2018 21:38:20 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/android/beginner-android/</guid>
      <description>初学安卓开发安卓</description>
    </item>
    
    <item>
      <title>相机和EasyTouch封装——游戏框架-09</title>
      <link>https://sofuck.top/posts/game-frame-09/</link>
      <pubDate>Tue, 18 Sep 2018 14:18:46 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/game-frame-09/</guid>
      <description>相机和EasyTouch的融合封装</description>
    </item>
    
    <item>
      <title>角色模块封装——游戏框架-08</title>
      <link>https://sofuck.top/posts/game-frame-08/</link>
      <pubDate>Mon, 17 Sep 2018 08:58:13 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/game-frame-08/</guid>
      <description>角色封装</description>
    </item>
    
    <item>
      <title>2D攻击范围</title>
      <link>https://sofuck.top/posts/2d-attack-range/</link>
      <pubDate>Sun, 09 Sep 2018 16:15:05 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/2d-attack-range/</guid>
      <description>2D攻击（碰撞）范围检测</description>
    </item>
    
    <item>
      <title>有限状态机</title>
      <link>https://sofuck.top/posts/finite-state-machine/</link>
      <pubDate>Sun, 09 Sep 2018 09:16:19 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/finite-state-machine/</guid>
      <description>实现有限状态机</description>
    </item>
    
    <item>
      <title>GL画图功能</title>
      <link>https://sofuck.top/posts/gl-drawing/</link>
      <pubDate>Sat, 08 Sep 2018 09:43:45 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/gl-drawing/</guid>
      <description>实现记录鼠标（或触摸）画的图，映射到纹理</description>
    </item>
    
    <item>
      <title>小地图封装——游戏框架-07</title>
      <link>https://sofuck.top/posts/game-frame-07/</link>
      <pubDate>Sat, 08 Sep 2018 07:59:20 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/game-frame-07/</guid>
      <description>小地图(mini-map)封装，与项目实战</description>
    </item>
    
    <item>
      <title>EasyTouch模块封装——游戏框架-06</title>
      <link>https://sofuck.top/posts/game-frame-06/</link>
      <pubDate>Fri, 07 Sep 2018 18:18:05 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/game-frame-06/</guid>
      <description>摇杆封装</description>
    </item>
    
    <item>
      <title>UI模块封装——游戏框架-05</title>
      <link>https://sofuck.top/posts/game-frame-05/</link>
      <pubDate>Fri, 31 Aug 2018 17:52:54 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/game-frame-05/</guid>
      <description>UI模块封装与MVC架构、制作测试登陆注册界面</description>
    </item>
    
    <item>
      <title>音效模块封装——游戏框架-04</title>
      <link>https://sofuck.top/posts/game-frame-04/</link>
      <pubDate>Thu, 30 Aug 2018 07:19:04 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/game-frame-04/</guid>
      <description>音效模块封装</description>
    </item>
    
    <item>
      <title>WWW封装——游戏框架-03</title>
      <link>https://sofuck.top/posts/game-frame-03/</link>
      <pubDate>Wed, 29 Aug 2018 15:15:31 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/game-frame-03/</guid>
      <description>http WWW模块封装</description>
    </item>
    
    <item>
      <title>常用设计模式——游戏框架-02</title>
      <link>https://sofuck.top/posts/game-frame-02/</link>
      <pubDate>Wed, 22 Aug 2018 14:25:14 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/game-frame-02/</guid>
      <description>设计模式</description>
    </item>
    
    <item>
      <title>English Sentence</title>
      <link>https://sofuck.top/posts/english-sentence-01/</link>
      <pubDate>Tue, 14 Aug 2018 08:35:36 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/english-sentence-01/</guid>
      <description>tutorial 辅导 &amp;gt;I made a tutorial on ways you can go about making a melon combat system with unity and c-sharp and so i thought i only normal to fallow up with a ranged combat video by the end of this tutorial you&amp;rsquo;ll have a character capable of handling a ranged weapon that rotates to face the mouse cursor and then shoots cool looking arrows that kill enemies of course you&amp;rsquo;ll be able to a plan you learn during this video to make all kinds of range shooting systems from huge powerful bullets and rockets to delicate little arrows now everything taugh here can be applied to any game in need for a shooting system without a child i&amp;rsquo;m sure or a side-scorlling platformer so as you can see i&amp;rsquo;ve set up this little seam with an archer like character who carries a simple ranged weapon and i can move left and right i also got an enemy character i&amp;rsquo;ll use has targets.</description>
    </item>
    
    <item>
      <title>设计原则——游戏框架-01</title>
      <link>https://sofuck.top/posts/game-frame-01/</link>
      <pubDate>Mon, 13 Aug 2018 21:05:01 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/game-frame-01/</guid>
      <description>设计原则和设计模式</description>
    </item>
    
    <item>
      <title>UI 特效制作</title>
      <link>https://sofuck.top/posts/ui-effects-01/</link>
      <pubDate>Mon, 13 Aug 2018 19:05:36 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/ui-effects-01/</guid>
      <description>UI 特效制作流程和思路</description>
    </item>
    
    <item>
      <title>Unity Tilemap模块</title>
      <link>https://sofuck.top/posts/unity-tilemap_mod/</link>
      <pubDate>Mon, 13 Aug 2018 08:47:21 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/unity-tilemap_mod/</guid>
      <description>TileMap(瓦片地图)： &amp;gt;可以快速构建关卡，也可以通过相关API代码生成。
 相关组件
  Grid:格子相关属性，TileMap是它子，也是一种画布（Canvas）。
  TileMap:接收绘制好瓦片的地方，类似PS图层。
  TileMap Renderer:控制瓦片渲染效果的组件，比如渲染顺序、遮罩、材质等。
  Tile Palette:控制瓦片中间层，这里选择需要的瓦片。
  Tile:瓦片，里面存储一个Sprite的引用和一个颜色值和碰撞类型。
  2D - extras:TileMap的2D官方拓展包，有拓展笔刷和瓦片
https://github.com/Unity-Technologies/2d-extras
    使用TileMap快速构建关卡
 使用RuleTile
  3.Cinemachine在2D中使用方法</description>
    </item>
    
    <item>
      <title>网络知识——P2P</title>
      <link>https://sofuck.top/posts/computer-illiteracy-p2p/</link>
      <pubDate>Sat, 11 Aug 2018 17:14:14 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/computer-illiteracy-p2p/</guid>
      <description>P2P简介</description>
    </item>
    
    <item>
      <title>【Pain To Learn Unity】——案例之像素鸟</title>
      <link>https://sofuck.top/posts/pain-to-learn-unity-notes-01/</link>
      <pubDate>Sat, 11 Aug 2018 15:08:23 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/pain-to-learn-unity-notes-01/</guid>
      <description>简单案例之像素鸟</description>
    </item>
    
    <item>
      <title>【Pain To Learn Unity】——案例之吃豆人</title>
      <link>https://sofuck.top/posts/pain-to-learn-unity-notes-02/</link>
      <pubDate>Sat, 11 Aug 2018 15:08:23 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/pain-to-learn-unity-notes-02/</guid>
      <description>简单案例之吃豆人</description>
    </item>
    
    <item>
      <title>Unity 动画系统（4）</title>
      <link>https://sofuck.top/posts/unity-animation-system-04/</link>
      <pubDate>Thu, 09 Aug 2018 14:57:50 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/unity-animation-system-04/</guid>
      <description>动画控制器_Animation Controller介绍、使用</description>
    </item>
    
    <item>
      <title>Unity 动画系统（3）</title>
      <link>https://sofuck.top/posts/unity-animation-system-03/</link>
      <pubDate>Thu, 09 Aug 2018 12:47:45 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/unity-animation-system-03/</guid>
      <description>动画的编辑_Animation View介绍、使用</description>
    </item>
    
    <item>
      <title>Unity 动画系统（2）</title>
      <link>https://sofuck.top/posts/unity-animation-system-02/</link>
      <pubDate>Wed, 08 Aug 2018 20:19:02 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/unity-animation-system-02/</guid>
      <description>模型与动画的创建和导入及注意事项</description>
    </item>
    
    <item>
      <title>UGUI</title>
      <link>https://sofuck.top/posts/ugui-01/</link>
      <pubDate>Wed, 08 Aug 2018 13:34:19 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/ugui-01/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Unity 动画系统（1）</title>
      <link>https://sofuck.top/posts/unity-animation-system-01/</link>
      <pubDate>Mon, 06 Aug 2018 11:45:28 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/unity-animation-system-01/</guid>
      <description>动画系统_简介、基本操作、常用网站</description>
    </item>
    
    <item>
      <title>JSON格式</title>
      <link>https://sofuck.top/posts/json/</link>
      <pubDate>Mon, 06 Aug 2018 07:42:20 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/json/</guid>
      <description>Json数据结构及工具LitJson</description>
    </item>
    
    <item>
      <title>AI逻辑</title>
      <link>https://sofuck.top/posts/unity-ai-01/</link>
      <pubDate>Sun, 05 Aug 2018 18:36:56 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/unity-ai-01/</guid>
      <description>Navigation AI逻辑。</description>
    </item>
    
    <item>
      <title>游戏常用英文</title>
      <link>https://sofuck.top/posts/game-words/</link>
      <pubDate>Sun, 05 Aug 2018 14:48:59 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/game-words/</guid>
      <description>常见全称及缩写。</description>
    </item>
    
    <item>
      <title>FPS_视角和移动</title>
      <link>https://sofuck.top/posts/unity-fps-view_move/</link>
      <pubDate>Sun, 05 Aug 2018 14:48:37 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/unity-fps-view_move/</guid>
      <description>鼠标和键盘控制移动。</description>
    </item>
    
    <item>
      <title>Unity Audio</title>
      <link>https://sofuck.top/posts/unity-audio-01/</link>
      <pubDate>Sun, 05 Aug 2018 09:39:51 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/unity-audio-01/</guid>
      <description>音频功能基本知识</description>
    </item>
    
    <item>
      <title>脚本的输入与控制</title>
      <link>https://sofuck.top/posts/script-input_control/</link>
      <pubDate>Mon, 30 Jul 2018 16:36:45 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/script-input_control/</guid>
      <description>鼠标输入 1.OnMouse方法  OnMouseEnter()：当鼠标进入GUIElement或Collider时调用。（只调用一次）
OnMouseExit()：鼠标离开GUIElement或Collider时调用。
OnMouseOver()：鼠标悬停在GUIElement或Collider上时调用每一帧。
OnMouseDown()：鼠标在GUIElement或Collider上点击时调用。
OnMouseIp()：释放鼠标按钮时调用。
OnMouseDrag()：鼠标拖拽GUIElement或Collider时调用。
OnMouseUpAsButton()：只有当鼠标在同一个GUIElement或Collider按下，释放时调用。
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  public class ObjectController : MonoBehaviour { private void OnMouseEnter()//当鼠标进入GUIElement或Collider时调用。（只调用一次）  { this.transform.localScale = new Vector3(1.3f, 1.3f, 1.3f);//物体放大1.3倍  } private void OnMouseExit()//鼠标离开  { this.transform.localScale = new Vector3(1f, 1f, 1f);//大小还原  this.transform.rotation = new Quaternion(0f,0f,0f,0f);//位置还原  } private void OnMouseOver()//鼠标悬停在GUIElement或Collider上时调用每一帧。  { this.</description>
    </item>
    
    <item>
      <title>MonoBehavior 常用方法</title>
      <link>https://sofuck.top/posts/monobehavior-common_method-01/</link>
      <pubDate>Mon, 30 Jul 2018 15:04:16 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/monobehavior-common_method-01/</guid>
      <description>事件行为 常用方法</description>
    </item>
    
    <item>
      <title>使用软件突发小技巧</title>
      <link>https://sofuck.top/posts/use-skill/</link>
      <pubDate>Sun, 29 Jul 2018 16:55:57 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/use-skill/</guid>
      <description> 按住 shift ，在准备复制文字（或其它）的一头按鼠标左键，在另一头按下左键，即可选中两头中的所有文字（或其它）。
 </description>
    </item>
    
    <item>
      <title>C# _语言基础</title>
      <link>https://sofuck.top/posts/c-sharp-notes-02/</link>
      <pubDate>Fri, 27 Jul 2018 08:18:12 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/c-sharp-notes-02/</guid>
      <description>值类型  包括自定义struct类型，enum枚举类型。值类型存储在内存的栈上面，在堆上面存储具体值。
值类型继承于System.ValueType，所有的类继承于System.Object。(Object是所有类型的基类)
/// 注释——为解释方法，类，空间&amp;hellip;进行说明
  struct——类型   用于打包封装小的数据集，可以(像class)建方法、事件&amp;hellip;。
  enum——类型   用于限定变量可能性。
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  #namespace test { class Program { //角标从0开始，Mon=1，使强制从一开始  //enum Days : byte :short 转换类型  enum Days { Mon, Tues, Wenes, Thurs, Fri, Satur, Sun}//整数型  struct Perosn { public int age; private string name; internal string fname;//命名空间内可以访问  protected string lastName;//protected 只有继承于它，才能访问  } static void Main(string[] args) { Person perosn = new Perosn(); person.</description>
    </item>
    
    <item>
      <title>C# _基本操作</title>
      <link>https://sofuck.top/posts/c-sharp-notes-01/</link>
      <pubDate>Tue, 24 Jul 2018 07:43:47 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/c-sharp-notes-01/</guid>
      <description>1.定义变量 必须声明 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  //&amp;amp;&amp;amp;逻辑和||逻辑或 class Program { static void (string[] args) { int a=3; int b=0; if(a==3) { b=4; } else if(a==4) { b=5; } Console.ReadKey();//获取按键 暂停  } }   2.if() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  //随机抽卡 Random random = new Random(); int r = random.</description>
    </item>
    
    <item>
      <title>Monobehavior事件响应（1）</title>
      <link>https://sofuck.top/posts/unity-script-01/</link>
      <pubDate>Sat, 21 Jul 2018 15:26:16 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/unity-script-01/</guid>
      <description>脚本的基本知识</description>
    </item>
    
    <item>
      <title>Unity 注意事项</title>
      <link>https://sofuck.top/posts/unity-notes-01/</link>
      <pubDate>Sat, 21 Jul 2018 10:38:10 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/unity-notes-01/</guid>
      <description> 疑难杂症——👇 一亿个注意: 1.Local和Global  Local是指的自身的坐标，Global指的是世界坐标。
假如一个物体没有父物体（即这个物体不是某个物体的子物体），或者父物体的坐标为（0，0，0）。这时候Local和Global的坐标是一样的。
假如有父物体，Local坐标是相对与父物体的坐标，而Global是指在空间中实际的坐标。
 2.Awake()和Start()  Awake()在游戏开始时自动调用，无论是否激活脚本组件都能被调用，一般用来创建变量。
Start()在Awake之后Update之前，一般用来初始化变量。
 3.Update()和FixUpdate()  Update()每一帧调用一次，一般用于非物理运动，如逻辑运算 。
Fixupdate()每隔固定时间调用一次，通过Edit-&amp;gt;Project Settings-&amp;gt;Time 进行设置，默认为20毫秒 ，一般用于物理运动。
 4.transform01translate0  transform是Gameobject的位置属性，translate是一个动作属性。
获取某个object的位置信息时就是transform，若是对其做动作，那就translate。
 5. </description>
    </item>
    
    <item>
      <title>Word Book</title>
      <link>https://sofuck.top/posts/words-notes/</link>
      <pubDate>Fri, 20 Jul 2018 15:14:20 +0800</pubDate>
      
      <guid>https://sofuck.top/posts/words-notes/</guid>
      <description>Just Notes</description>
    </item>
    
  </channel>
</rss>
